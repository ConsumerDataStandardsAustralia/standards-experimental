{
    "openapi": "3.0.3",
    "info": {
        "contact": {
            "email": "contact@consumerdatastandards.gov.au",
            "name": "Consumer Data Standards",
            "url": "https://consumerdatastandards.gov.au"
        },
        "description": "Specification of endpoints defined in the Simple Bank Account Origination experimental standard.  This is an experimental standard created by the Data Standards Body (DSB) as part of the Consumer Data Standards",
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/MIT"
        },
        "title": "CDR Experimantal Simple Bank Account Origination API",
        "version": "0.0.6"
    },
    "servers": [
        {
            "url": "https://data.holder.com.au/cds-au/v1"
        }
    ],
    "paths": {
        "/DSB/banking/origination/schemes/{schemeId}": {
            "summary": "Get Origination Scheme",
            "x-version": "1",
            "get": {
                "description": "Obtain the meta data describing how to make an application for a family of products.",
                "operationId": "getOriginationScheme",
                "tags": [
                    "Banking",
                    "Products"
                ],
                "parameters": [
                    {
                        "name": "schemeId",
                        "description": "Obtain the details of a specific origination scheme.",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "$ref": "#/components/parameters/x-v"
                    },
                    {
                        "$ref": "#/components/parameters/x-min-v"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OriginationSchemeResponseV1"
                                }
                            }
                        },
                        "description": "Successful response",
                        "headers": {
                            "x-v": {
                                "$ref": "#/components/headers/x-v"
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseErrorListV2"
                                }
                            }
                        },
                        "description": "The following error codes MUST be supported:<br/><ul class=\"error-code-list\"><li>[400 - Invalid Field](#error-400-field-invalid)</li><li>[400 - Missing Field](#error-400-field-missing)</li><li>[400 - Invalid Page Size](#error-400-field-invalid-page-size)</li><li>[400 - Invalid Version](#error-400-header-invalid-version)</li></ul>"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseErrorListV2"
                                }
                            }
                        },
                        "description": "The following error codes MUST be supported:<br/><ul class=\"error-code-list\"><li>[406 - Unsupported Version](#error-406-header-unsupported-version)</li></ul>"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseErrorListV2"
                                }
                            }
                        },
                        "description": "The following error codes MUST be supported:<br/><ul class=\"error-code-list\"><li>[422 - Invalid Page](#error-422-field-invalid-page)</li></ul>"
                    }
                }
            }
        },
        "/DSB/banking/accounts": {
            "summary": "Apply For Bank Account",
            "x-version": "1",
            "post": {
                "description": "Submit an application, on behalf of a consumer, to apply for an account to be originated.",
                "operationId": "applyForAccount",
                "tags": [
                    "Banking",
                    "Accounts"
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/x-v"
                    },
                    {
                        "$ref": "#/components/parameters/x-min-v"
                    }
                ],
                "requestBody": {
                    "description": "Application data provided in accordance to a defined origination scheme",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplyForBankAccountRequestV1"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplyForBankAccountResponseV1"
                                }
                            }
                        },
                        "description": "Successful response",
                        "headers": {
                            "x-v": {
                                "$ref": "#/components/headers/x-v"
                            }
                        }
                    },
                    "400": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseErrorListV2"
                                }
                            }
                        },
                        "description": "The following error codes MUST be supported:<br/><ul class=\"error-code-list\"><li>[400 - Invalid Field](#error-400-field-invalid)</li><li>[400 - Missing Field](#error-400-field-missing)</li><li>[400 - Invalid Page Size](#error-400-field-invalid-page-size)</li><li>[400 - Invalid Version](#error-400-header-invalid-version)</li></ul>"
                    },
                    "406": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseErrorListV2"
                                }
                            }
                        },
                        "description": "The following error codes MUST be supported:<br/><ul class=\"error-code-list\"><li>[406 - Unsupported Version](#error-406-header-unsupported-version)</li></ul>"
                    },
                    "422": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseErrorListV2"
                                }
                            }
                        },
                        "description": "The following error codes MUST be supported:<br/><ul class=\"error-code-list\"><li>[422 - Invalid Page](#error-422-field-invalid-page)</li></ul>"
                    }
                }
            }
        }
    },
    "components": {
        "headers": {
            "x-v": {
                "schema": {
                    "description": "The [version](#response-headers) of the API end point that the data holder has responded with.",
                    "type": "string"
                }
            }
        },
        "parameters": {
            "x-v": {
                "name": "x-v",
                "description": "Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)",
                "in": "header",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "x-min-v": {
                "name": "x-min-v",
                "description": "Minimum version of the API end point requested by the client. Must be set to a positive integer if provided. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable.",
                "in": "header",
                "required": false,
                "schema": {
                    "type": "string"
                }
            }
        },
        "schemas": {
            "ApplyForBankAccountRequestV1": {
                "required": [
                    "data",
                    "meta"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "required": [],
                        "x-conditional": [],
                        "type": "object",
                        "properties": {
                            "applicants": {
                                "$ref": "#/components/schemas/ApplicantsModelV1"
                            },
                            "products": {
                                "$ref": "#/components/schemas/ProductsModelV1"
                            },
                            "income": {
                                "$ref": "#/components/schemas/IncomeModelV1"
                            },
                            "expenses": {
                                "$ref": "#/components/schemas/ExpensesModelV1"
                            },
                            "assets": {
                                "$ref": "#/components/schemas/AssetsModelV1"
                            },
                            "liabilities": {
                                "$ref": "#/components/schemas/LiabilitiesModelV1"
                            },
                            "cdrData": {
                                "type": "object",
                                "properties": {
                                    "cdrAccounts": {
                                        "type": "array",
                                        "description": "Array of summary account data for an applicant obtained from the CDR",
                                        "items": {
                                            "$ref": "#/components/schemas/CdrPayloadModelV1"
                                        }
                                    },
                                    "cdrAccountDetails": {
                                        "type": "array",
                                        "description": "Array of detailed account data for an applicant obtained from the CDR",
                                        "items": {
                                            "$ref": "#/components/schemas/CdrPayloadModelV1"
                                        }
                                    },
                                    "cdrBalances": {
                                        "type": "array",
                                        "description": "Array of account balance data for an applicant obtained from the CDR",
                                        "items": {
                                            "$ref": "#/components/schemas/CdrPayloadModelV1"
                                        }
                                    },
                                    "cdrTransactions": {
                                        "type": "array",
                                        "description": "Array of transaction data for an applicant obtained from the CDR",
                                        "items": {
                                            "$ref": "#/components/schemas/CdrPayloadModelV1"
                                        }
                                    },
                                    "cdrCustomerDetails": {
                                        "type": "array",
                                        "description": "Array of customer detail data for an applicant obtained from the CDR",
                                        "items": {
                                            "$ref": "#/components/schemas/CdrPayloadModelV1"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "OriginationSchemeResponseV1": {
                "required": [
                    "data",
                    "links",
                    "meta"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "required": [
                            "schemeUType"
                        ],
                        "x-conditional": [
                            "lixi2",
                            "cdrApplyV1"
                        ],
                        "type": "object",
                        "properties": {
                            "schemeUType": {
                                "type": "string",
                                "description": "The type of origination scheme represented",
                                "enum": [
                                    "lixi2",
                                    "cdrApplyForBankAccountV1"
                                ]
                            },
                            "lixi2": {
                                "$ref": "#/components/schemas/Lixi2OriginationSchemeModelV1"
                            },
                            "cdrApplyForBankAccountV1": {
                                "$ref": "#/components/schemas/CdrOriginationSchemeModelV1"
                            }
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/Links"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ApplyForBankAccountResponseV1": {
                "required": [
                    "data",
                    "links",
                    "meta"
                ],
                "type": "object",
                "properties": {
                    "data": {
                        "required": [
                            "applicationStatus",
                            "applicationId"
                        ],
                        "type": "object",
                        "properties": {
                            "applicationStatus": {
                                "type": "string",
                                "description": "The status of the application",
                                "enum": [
                                    "REJECTED",
                                    "ACCEPTED_COMPLETE",
                                    "ACCEPTED_INCOMPLETE",
                                    "PENDING_REVIEW",
                                    "ACCOUNT_CREATED"
                                ]
                            },
                            "applicationId": {
                                "type": "string",
                                "description": "Unique reference for this application"
                            },
                            "nextStep": {
                                "type": "string",
                                "description": "The next step that will be taken for this applicagtion",
                                "enum": [
                                    "NONE",
                                    "APPLICANT_CONTACT",
                                    "REDIRECT"
                                ]
                            },
                            "rejectionReasons": {
                                "type": "array",
                                "description": "Array of reasons that the application was rejected that need to be rectified before the application will be accepted",
                                "items": {
                                    "$ref": "#/components/schemas/RejectionReasonModelV1"
                                }
                            },
                            "redirectUri": {
                                "type": "string",
                                "description": "A web page that the customer should be directed to so that the application can be continued",
                                "x-cds-type": "URIString"
                            },
                            "applicantMessage": {
                                "type": "string",
                                "description": "An optional message that can be displayed to the applicant to describe the next steps"
                            }
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/Links"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    }
                }
            },
            "ResponseErrorListV2": {
                "required": [
                    "errors"
                ],
                "type": "object",
                "properties": {
                    "errors": {
                        "type": "array",
                        "description": "",
                        "items": {
                            "required": [
                                "code",
                                "detail",
                                "title"
                            ],
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string",
                                    "description": "The code of the error encountered. Where the error is specific to the respondent, an application-specific error code, expressed as a string value. If the error is application-specific, the URN code that the specific error extends must be provided in the meta object. Otherwise, the value is the error code URN."
                                },
                                "title": {
                                    "type": "string",
                                    "description": "A short, human-readable summary of the problem that MUST NOT change from occurrence to occurrence of the problem represented by the error code."
                                },
                                "detail": {
                                    "type": "string",
                                    "description": "A human-readable explanation specific to this occurrence of the problem."
                                },
                                "meta": {
                                    "$ref": "#/components/schemas/MetaError"
                                }
                            }
                        }
                    }
                },
                "x-conditional": [
                    "meta"
                ]
            },
            "Lixi2OriginationSchemeModelV1": {
                "type": "object",
                "description": "Provides the metadata for making an application using a LIXI2 gateway. Mandatory if schemeUType is set to 'lixi2'",
                "required": [
                    "submissionUri",
                    "lixiCode",
                    "lixiVersion"
                ],
                "properties": {
                    "submissionUri": {
                        "type": "string",
                        "description": "Base path used to access the LIXI2 gateway",
                        "x-cds-type": "URIString"
                    },
                    "schemaUri": {
                        "type": "string",
                        "description": "Location of file describing the supported LIXI schema.  Must be a file ending in .xsd (representing an XSD file) or .json (representing a JSON Schema file)",
                        "x-cds-type": "URIString"
                    },
                    "lixiCode": {
                        "type": "string",
                        "description": "The LIXI participant code, assigned by LIXI, for the receiving organisation"
                    },
                    "lixiVersion": {
                        "type": "string",
                        "description": "The supported version of the LIXI2 schema"
                    },
                    "lixiCustomVersion": {
                        "type": "string",
                        "description": "Optional identifier of a custom version of the LIXI payloads that are accepted if the receiving organisation has made custom extensions or modifications to the LIXI schema"
                    },
                    "productCodeMappings": {
                        "type": "array",
                        "description": "Optional mapping of CDR product IDs to product codes used in LIXI applications via this origination scheme.  If absent, or if a mapping is not included, then the CDR product ID is expected to be used as the LIXI product code",
                        "items": {
                            "required": [
                                "productId",
                                "productCode"
                            ],
                            "type": "object",
                            "properties": {
                                "productId": {
                                    "type": "string",
                                    "description": "The CDR product ID to map from"
                                },
                                "productCode": {
                                    "type": "string",
                                    "description": "The LIXI product code to map to"
                                }
                            }
                        }
                    },
                    "schematronUri": {
                        "type": "string",
                        "description": "Optional reference to a Schematron file indicating the valid use of this LIXI gateway",
                        "x-cds-type": "URIString"
                    },
                    "apiSpecificationUri": {
                        "type": "string",
                        "description": "Optional reference to an Open API Specification file describing the submission API",
                        "x-cds-type": "URIString"
                    },
                    "additionalInfoUri": {
                        "type": "string",
                        "description": "Optional reference to a web page with additional documention describing the use of the LIXI gateway",
                        "x-cds-type": "URIString"
                    }
                }
            },
            "CdrOriginationSchemeModelV1": {
                "type": "object",
                "description": "Provides the metadata for making an application using version 1 of the CDR 'Apply For Bank Account' endpoint. Mandatory if schemeUType is set to 'cdrApplyForBankAccountV1'",
                "required": [
                    "version",
                    "dataRequirements"
                ],
                "properties": {
                    "version": {
                        "type": "string",
                        "descroiption": "The highest version of the `Apply For Bank Account` endpoint currently supported"
                    },
                    "minVersion": {
                        "type": "string",
                        "description": "The lowest version of the `Apply For Bank Account` endpoint currently supported if different from `version`"
                    },
                    "dataRequirements": {
                        "type": "object",
                        "description": "The data objects supported by the `Apply For Bank Account` that are expected to be populated for this origination scheme, specified according to endpoint version.  An entry for each version between `version` and `minVersion` (inclusive) is expected to be included",
                        "properties": {
                            "v1": {
                                "type": "object",
                                "description": "Data requirements when calling v1 of the `Apply For Bank Account` endpoint",
                                "properties": {
                                    "referrer": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/DataRequirementModelV1"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "confirmNeedsAnalysisConducted": {
                                                        "$ref": "#/components/schemas/DataRequirementModelV1"
                                                    },
                                                    "confirmTargetMarketAssessed": {
                                                        "$ref": "#/components/schemas/DataRequirementModelV1"
                                                    },
                                                    "confirmTerms": {
                                                        "allOf": [
                                                            {
                                                                "$ref": "#/components/schemas/DataRequirementModelV1"
                                                            },
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "terms": {
                                                                        "$ref": "#/components/schemas/TermsModelV1"
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    "applicants": {
                                        "$ref": "#/components/schemas/DataRequirementModelV1"
                                    },
                                    "products": {
                                        "$ref": "#/components/schemas/DataRequirementModelV1"
                                    },
                                    "income": {
                                        "$ref": "#/components/schemas/DataRequirementModelV1"
                                    },
                                    "expenses": {
                                        "$ref": "#/components/schemas/DataRequirementModelV1"
                                    },
                                    "assets": {
                                        "$ref": "#/components/schemas/DataRequirementModelV1"
                                    },
                                    "liabilities": {
                                        "$ref": "#/components/schemas/DataRequirementModelV1"
                                    },
                                    "cdrData": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/DataRequirementModelV1"
                                            },
                                            {
                                                "type": "object",
                                                "properties": {
                                                    "cdrAccounts": {
                                                        "$ref": "#/components/schemas/DataRequirementModelV1"
                                                    },
                                                    "cdrAccountDetails": {
                                                        "$ref": "#/components/schemas/DataRequirementModelV1"
                                                    },
                                                    "cdrBalances": {
                                                        "$ref": "#/components/schemas/DataRequirementModelV1"
                                                    },
                                                    "cdrTransactions": {
                                                        "$ref": "#/components/schemas/DataRequirementModelV1"
                                                    },
                                                    "cdrCustomerDetails": {
                                                        "$ref": "#/components/schemas/DataRequirementModelV1"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "DataRequirementModelV1": {
                "type": "object",
                "required": [
                    "requirement"
                ],
                "properties": {
                    "requirement": {
                        "type": "string",
                        "description": "Indicate whether the specific data set or field is required or not for the application.  Valid options are:\n* REQUIRED - This data set is required for an application to be accepted\n* PREFERRED - This data is needed for completion of the origination process but an application will be accepted without it\n* OPTIONAL - This data can be accepted but and will assist in the origination process\n* NOT_SUPPORTED - This data should not be sent as it will not be used",
                        "enum": [
                            "REQUIRED",
                            "PREFERRED",
                            "OPTIONAL",
                            "NOT_SUPPORTED"
                        ]
                    }
                }
            },
            "TermsModelV1": {
                "type": "array",
                "description": "One or more statements that the customer must agree to for the origination process to be completed",
                "items": {
                    "type": "object",
                    "required": [
                        "displayName",
                        "termId",
                        "uri",
                        "mimeType"
                    ],
                    "properties": {
                        "displayName": {
                            "type": "string",
                            "description": "The display name of the terms to be presented to the customer"
                        },
                        "termId": {
                            "type": "string",
                            "description": "Unique identifier of the terms to be used to report acceptance"
                        },
                        "uri": {
                            "type": "string",
                            "description": "Path to the contact for the terms and conditions to present to the customer",
                            "x-cds-type": "URIString"
                        },
                        "mimeType": {
                            "type": "string",
                            "description": "Mime type that the terms will be provided in so that the client can determine how best to display the content to the customer"
                        }
                    }
                }
            },
            "RejectionReasonModelV1": {
                "type": "object",
                "description": "A single reason given to explain the rejection of an application",
                "required": [
                    "code",
                    "message",
                    "detail"
                ],
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "The reason for the rejection",
                        "enum": [
                            "REFERRER_UNKNOWN",
                            "MISSING_DATA",
                            "NOT_ELIGIBLE"
                        ]
                    },
                    "message": {
                        "type": "string",
                        "description": "A message describing the rejection"
                    },
                    "detail": {
                        "type": "object",
                        "description": "Additional information that is reason type dependent that gives more detail",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "mimeType": {
                        "type": "string",
                        "description": "Mime type that the terms will be provided in so that the client can determine how best to display the content to the customer"
                    }
                }
            },
            "ApplicantsModelV1": {},
            "ProductsModelV1": {},
            "IncomeModelV1": {},
            "ExpensesModelV1": {},
            "AssetsModelV1": {},
            "LiabilitiesModelV1": {},
            "CdrPayloadModelV1": {
                "type": "object",
                "required": [
                    "applicantId",
                    "v",
                    "dataHolderBrandId",
                    "data"
                ],
                "properties": {
                    "applicantId": {
                        "type": "string",
                        "description": "ID of the applicant in the applicants array that this data relates to"
                    },
                    "v": {
                        "type": "string",
                        "description": "The x-v value of the response payload obtained via the CDR"
                    },
                    "dataHolderBrandId": {
                        "type": "string",
                        "description": "The data holder brand ID on the CDR Register for the data holder the data was obtained from"
                    },
                    "data": {
                        "type": "object",
                        "description": "The actual data obtained via the CDR",
                        "additionalProperties": true
                    }
                }
            },
            "Links": {
                "properties": {
                    "self": {
                        "description": "Fully qualified link that generated the current response document",
                        "type": "string",
                        "x-cds-type": "URIString"
                    }
                },
                "required": [
                    "self"
                ],
                "type": "object"
            },
            "Meta": {
                "type": "object"
            },
            "LinksPaginated": {
                "properties": {
                    "self": {
                        "description": "Fully qualified link that generated the current response document",
                        "type": "string",
                        "x-cds-type": "URIString"
                    },
                    "first": {
                        "description": "URI to the first page of this set. Mandatory if this response is not the first page",
                        "type": "string",
                        "x-cds-type": "URIString"
                    },
                    "prev": {
                        "description": "URI to the previous page of this set. Mandatory if this response is not the first page",
                        "type": "string",
                        "x-cds-type": "URIString"
                    },
                    "next": {
                        "description": "URI to the next page of this set. Mandatory if this response is not the last page",
                        "type": "string",
                        "x-cds-type": "URIString"
                    },
                    "last": {
                        "description": "URI to the last page of this set. Mandatory if this response is not the last page",
                        "type": "string",
                        "x-cds-type": "URIString"
                    }
                },
                "required": [
                    "self"
                ],
                "type": "object",
                "x-conditional": [
                    "first",
                    "prev",
                    "next",
                    "last"
                ]
            },
            "MetaPaginated": {
                "properties": {
                    "totalRecords": {
                        "description": "The total number of records in the full set. See [pagination](#pagination).",
                        "type": "integer",
                        "x-cds-type": "NaturalNumber"
                    },
                    "totalPages": {
                        "description": "The total number of pages in the full set. See [pagination](#pagination).",
                        "type": "integer",
                        "x-cds-type": "NaturalNumber"
                    }
                },
                "required": [
                    "totalPages",
                    "totalRecords"
                ],
                "type": "object"
            },
            "MetaError": {
                "type": "object",
                "properties": {
                    "urn": {
                        "type": "string",
                        "description": "The CDR error code URN which the application-specific error code extends. Mandatory if the error `code` is an application-specific error rather than a standardised error code."
                    }
                },
                "description": "Additional data for customised error codes",
                "x-conditional": [
                    "urn"
                ]
            }
        }
    }
}